<root>
    <rule>
        <demo>detect the package type and grab it, then place it at the target location</demo>
        <intent>(detect the package type) and (grab it), then (place it at the target location)</intent>
        <pattern>^(detect.*) and (grab.*), then (place.*at.*)$</pattern>
    </rule>
    <rule>
        <demo>grab the package and mail it to the target location at the same time.</demo>
        <intent>(grab the package) and (mail it to the target location) (at the same time)</intent>
        <pattern>^(grab.*) and (mail.*)(at the same time)$</pattern>
    </rule>
    <rule>
        <demo>complete the whole cooking process</demo>
        <intent>(complete the whole cooking process)</intent>
        <pattern>^(complete.*process)$</pattern>
    </rule>
    <rule>
        <demo>check the safety of the environment, grab the package, and then move it to the target location.</demo>
        <intent>(check the safety of the environment), (grab the package), and then (move it to the target location)</intent>
        <pattern>^(check.*), (grab.*), and then (move.*location)$</pattern>
    </rule>
    <rule>
        <demo>interrupt the assembly if the environment is unsafe, otherwise assemble the parts and check the quality.</demo>
        <intent>(interrupt the assembly) (if the environment is unsafe), otherwise (assemble the parts) and (check the quality)</intent>
        <pattern>^(interrupt.*) (if.*), otherwise (assemble.*) and (check.*)$</pattern>
    </rule>
    <rule>
        <demo>retrieve the parts that meet the positioning requirements and check the quality after assembly</demo>
        <intent>(retrieve the parts) that (meet the positioning requirements) and (check the quality) after (assembly)</intent>
        <pattern>^(retrieve.*) that (meet.*) and (check.*) after (assembly)$</pattern>
    </rule>
    <rule>
        <demo>retrieve the necessary parts and position them correctly before assembly</demo>
        <intent>(retrieve the necessary parts) and (position them correctly) before (assembly)</intent>
        <pattern>^(retrieve.*) and (position.*) before (assembly.*)$</pattern>
    </rule>
    <rule>
        <demo>assemble the parts securely</demo>
        <intent>(assemble the parts securely)</intent>
        <pattern>^(assemble.*parts.*securely)$</pattern>
    </rule>
    <rule>
        <demo>grab the necessary parts, position them correctly, and then assemble the parts</demo>
        <intent>(grab the necessary parts), (position them correctly), and then (assemble the parts)</intent>
        <pattern>^(grab.*), (position.*), and then (assemble.*)$</pattern>
    </rule>
    <rule>
        <demo>request human assistance if necessary</demo>
        <intent>(request human assistance) if necessary</intent>
        <pattern>^(request.*) if necessary$</pattern>
    </rule>
    <rule>
        <demo>check the component status, and then assemble the parts</demo>
        <intent>(check the component status), and then (assemble the parts)</intent>
        <pattern>^(check.*), and then (assemble.*)$</pattern>
    </rule>
    <rule>
        <demo>check the component status, and then check the assembly quality</demo>
        <intent>(check the component status), and then (check the assembly quality)</intent>
        <pattern>^(check.*), and then (check.*)$</pattern>
    </rule>
    <rule>
        <demo>request human assistance and grab the parts at the same time if necessary</demo>
        <intent>(request human assistance) and (grab the parts) (at the same time if necessary)</intent>
        <pattern>^(request.*) and (grab.*) (at the same.*?)$</pattern>
    </rule>
    <rule>
        <demo>check that all parts needed for assembly are available, then start the assembly process</demo>
        <intent>(check that all parts needed for assembly are available), then (start the assembly process)</intent>
        <pattern>^(check.*), then (start.*assembly.*)$</pattern>
    </rule>
    <rule>
        <demo>check the component status, and then grab the necessary parts</demo>
        <intent>(check the component status), and then (grab the necessary parts)</intent>
        <pattern>^(check.*), and then (grab.*)$</pattern>
    </rule>
    <rule>
        <demo>grab parts and perform assembly step by step</demo>
        <intent>(grab parts) and (perform assembly) (step by step)</intent>
        <pattern>^(grab.*) and (perform.*) (step by step.*?)$</pattern>
    </rule>
    <rule>
        <demo>request assistance and grab the necessary parts at the same time</demo>
        <intent>(request assistance) and (grab the necessary parts) (at the same time)</intent>
        <pattern>^(request.*) and (grab.*) (at the same time.*?)$</pattern>
    </rule>
    <rule>
        <demo>position the parts correctly for assembly</demo>
        <intent>(position the parts correctly) for assembly</intent>
        <pattern>^(position.*) for assembly$</pattern>
    </rule>
    <rule>
        <demo>package the assembled parts securely for shipping</demo>
        <intent>(package the assembled parts securely) for shipping</intent>
        <pattern>^(package.*) for shipping$</pattern>
    </rule>
    <rule>
        <demo>interrupt operation when encountering obstacles or dangerous situations</demo>
        <intent>(interrupt operation) when (encountering obstacles or dangerous situations)</intent>
        <pattern>^(interrupt.*) when (encountering.*)$</pattern>
    </rule>
    <rule>
        <demo>grab and position the parts, then start the assembly process</demo>
        <intent>(grab) and (position the parts), then (start the assembly process)</intent>
        <pattern>^(grab.*) and (position.*), then (start.*)$</pattern>
    </rule>
    <rule>
        <demo>retrieve the parts that meet the positioning requirements and check the quality after assembly</demo>
        <intent>(retrieve the parts) that (meet the positioning requirements) and (check the quality) after (assembly)</intent>
        <pattern>^(retrieve.*) that (meet.*) and (check.*) after (assembly)$</pattern>
    </rule>
    <rule>
        <demo>retrieve the necessary parts and position them correctly before assembly</demo>
        <intent>(retrieve the necessary parts) and (position them correctly) before (assembly)</intent>
        <pattern>^(retrieve.*) and (position.*) before (assembly.*)$</pattern>
    </rule>
    <rule>
        <demo>complete the whole cooking process</demo>
        <intent>(complete the whole cooking process)</intent>
        <pattern>^(complete.*process)$</pattern>
    </rule>
    <rule>
        <demo>please go around this obstacle and get me your phone on the table</demo>
        <intent>(go around this obstacle) and (get me your phone on the table)</intent>
        <pattern>^(go.*) and (get.*phone.*table)$</pattern>
    </rule>
    <rule>
        <demo>get the necessary workpiece, position it correctly, and then assemble it</demo>
        <intent>(get the necessary workpiece), (position it correctly), and then (assemble it)</intent>
        <pattern>^(get.*), (position.*), and then (assemble.*)$</pattern>
    </rule>
<rule><demo>move the package to the target position, and then place it correctly</demo><intent>(move the package) to (the target position), and then (place it correctly)</intent><pattern>^(move.*to.*) (the target position), and then (place.*correctly)$</pattern></rule><rule><demo>check if the environment is safe, then execute a sequence of correct_positioning and place_package</demo><intent>(check if the environment is safe), then (execute a sequence of correct_positioning) and (place_package)</intent><pattern>^(check.*environment.*safe), then (execute.*correct_positioning) and (place_package)$</pattern></rule><rule><demo>sort all the packages before moving them to the next location</demo><intent>(sort all the packages) before (moving them to the next location)</intent><pattern>^(sort.*packages.*) before (moving.*next.*location)$</pattern></rule><rule><demo>detect and classify the packages before moving them to the next location</demo><intent>(detect and classify the packages) before (moving them to the next location)</intent><pattern>^(detect.*classify.*) before (moving.*next location)$</pattern></rule><rule><demo>pick up the package and place it in the correct position, then assemble all necessary parts</demo><intent>(pick up the package) and (place it in the correct position), then (assemble all necessary parts)</intent><pattern>^(pick.*up.*) and (place.*in.*correct.*position), then (assemble.*all.*necessary.*parts)$</pattern></rule><rule><demo>check the package type, grab the required package, and move it to the target location</demo><intent>(check the package type), (grab the required package), and (move it to the target location)</intent><pattern>^(check.*package.*), (grab.*package.*), and (move.*to.*target.*location)$</pattern></rule><rule><demo>grab the package, interrupt the operation when necessary, and move the package to the target location.
</demo><intent>(grab the package), (interrupt the operation when necessary), and (move the package to the target location)</intent><pattern>^(grab.*) (interrupt.*), and (move.*package.*target.*)$</pattern></rule><rule><demo>move the package to the specified location and then notify the exception</demo><intent>(move the package to the specified location) and then (notify the exception)</intent><pattern>^(move.*package.*specified.*location) and then (notify.*exception)$</pattern></rule><rule><demo>grab the package and move it to the specified location in parallel</demo><intent>(grab the package) and (move it to the specified location) (in parallel)</intent><pattern>^(grab.*) and (move.*to.*location) (in parallel)$</pattern></rule><rule><demo>move the package to the correct location, and then place the package</demo><intent>(move the package to the correct location), and then (place the package)</intent><pattern>^(move.*package.*correct.*), and then (place.*package)$</pattern></rule><rule><demo>complete the target location, and then notify the exception</demo><intent>(complete the target location), and then (notify the exception)</intent><pattern>^(complete.*target.*location), and then (notify.*exception)$</pattern></rule><rule><demo>request help for moving the package, and then execute the route plan</demo><intent>(request help for moving the package), and then (execute the route plan)</intent><pattern>^(request.*help.*) and then (execute.*route.*plan)$</pattern></rule><rule><demo>collect all packages from the left shelf and stack in the designated area</demo><intent>(collect all packages from the left shelf) and (stack in the designated area)</intent><pattern>^(collect.*packages.*from.*left.*shelf) and (stack.*designated.*area)$</pattern></rule><rule><demo>inspect the incoming packages to determine the type of each</demo><intent>(inspect the incoming packages) to determine (the type of each)</intent><pattern>^(inspect.*) to determine (the type.*each)$</pattern></rule><rule><demo>then sort into separate containers</demo><intent>(then sort) into (separate containers)</intent><pattern>^(then sort.*) into (separate.*containers)$</pattern></rule><rule><demo>recognize the type of package and then process it</demo><intent>(recognize the type of package) and then (process it)</intent><pattern>^(recognize.*)and then (process.*)$</pattern></rule><rule><demo>identify the package type, and then place it in the correct position</demo><intent>(identify the package type), and then (place it in the correct position)</intent><pattern>^(identify.*) and then (place.*correct.*)$</pattern></rule><rule><demo>check the environment safety, and then grab the package if it is safe</demo><intent>(check the environment safety), and then (grab the package) (if it is safe)</intent><pattern>^(check.*environment.*safety), and then (grab.*package) (if.*safe)$</pattern></rule><rule><demo>check the package type and confirm the location for package placement before placing it</demo><intent>(check the package type) and (confirm the location for package placement) before (placing it)</intent><pattern>^(check.*package.*) and (confirm.*location.*package.*placement) before (placing.*)$</pattern></rule><rule><demo>place the package at the correct position and notify if any exception occurs</demo><intent>(place the package) (at the correct position) and (notify) (if any exception occurs)</intent><pattern>^(place.*) (at.*position) and (notify.*) (if.*exception occurs)$</pattern></rule><rule><demo>grab the package and move it to the target location in sequence</demo><intent>(grab the package) and (move it to the target location) (in sequence)</intent><pattern>^(grab.*) and (move.*to.*target.*location) (in.*sequence)$</pattern></rule><rule><demo>move the object to the designated position and notify the completion</demo><intent>(move the object to the designated position) and (notify the completion)</intent><pattern>^(move.*object.*designated.*) and (notify.*completion)$</pattern></rule><rule><demo>grab the object and move it to the designated position simultaneously</demo><intent>(grab the object) and (move it to the designated position) (simultaneously)</intent><pattern>^(grab.*object) and (move.*designated.*position) (simultaneously)$</pattern></rule><rule><demo>check whether the environment is safe and, if so, move the objects to the designated location</demo><intent>(check whether the environment is safe) and, (if so), (move the objects to the designated location)</intent><pattern>^(check.*environment.*safe.*) and, (if.*), (move.*objects.*designated.*location)$</pattern></rule><rule><demo>interrupt the current operation when an exception occurs and notify the supervisor</demo><intent>(interrupt the current operation) (when an exception occurs) and (notify the supervisor)</intent><pattern>^(interrupt.*operation) (when.*exception.*occurs) and (notify.*supervisor)$</pattern></rule><rule><demo>grab the necessary parts and place them at the target location</demo><intent>(grab the necessary parts) and (place them at the target location)</intent><pattern>^(grab.*parts.*) and (place.*at.*target.*location)$</pattern></rule><rule><demo>inspect the packages for handling and notify exceptions as necessary</demo><intent>(inspect the packages for handling) and (notify exceptions) (as necessary)</intent><pattern>^(inspect.*packages.*handling.*) and (notify.*exceptions.*) (as.*necessary)$</pattern></rule><rule><demo>move the package to the designated location</demo><intent>(move the package) to (the designated location)</intent><pattern>^(move.*to.*)$</pattern></rule><rule><demo>check if the package is damaged, if not, continue to move the package</demo><intent>(check if the package is damaged), (if not), (continue to move the package)</intent><pattern>^(check.*package.*damaged), (if.*), (continue.*move.*package)$</pattern></rule><rule><demo>grab the package and check if there are any hazardous and obstacles in the environment before proceeding
</demo><intent>(grab the package) and (check if there are any hazardous and obstacles in the environment) before proceeding</intent><pattern>^(grab.*) and (check.*hazardous.*obstacles.*) before proceeding$</pattern></rule><rule><demo>grab the package and place it in the correct position</demo><intent>(grab the package) and (place it in the correct position)</intent><pattern>^(grab.*) and (place.*in.*position)$</pattern></rule><rule><demo>detect the item type, and then place it in the corresponding position</demo><intent>(detect the item type), and then (place it in the corresponding position)</intent><pattern>^(detect.*) and then (place.*corresponding position)$</pattern></rule><rule><demo>detect any obstacles, if encountered, interrupt the operation and report the exception</demo><intent>(detect any obstacles), (if encountered), (interrupt the operation) and (report the exception)</intent><pattern>^(detect.*obstacles), (if.*), (interrupt.*) and (report.*exception)$</pattern></rule><rule><demo>moving the packages to the target location and send notification in case of any exception</demo><intent>(moving the packages to the target location) and (send notification) (in case of any exception)</intent><pattern>^(moving.*packages.*target.*location) and (send.*notification) (in case.*exception)$</pattern></rule><rule><demo>check the weight of the package and adjust the position if necessary</demo><intent>(check the weight of the package) and (adjust the position) (if necessary)</intent><pattern>^(check.*weight.*) and (adjust.*position.*) (if.*necessary)$</pattern></rule><rule><demo>move the package to the safe area and notify of any safety hazards</demo><intent>(move the package) to (the safe area) and (notify) of (any safety hazards)</intent><pattern>^(move.*to.*the safe area) and (notify.*of.*any safety hazards)$</pattern></rule><rule><demo>transport the package to the target position while checking for environmental safety</demo><intent>(transport the package) to the (target position) (while checking for environmental safety)</intent><pattern>^(transport.*to.*target.*) (while.*environmental.*)$</pattern></rule><rule><demo>move the package to the target location safely</demo><intent>(move the package) to (the target location) (safely)</intent><pattern>^(move.*to.*) (the.*location) (safely)$</pattern></rule><rule><demo>check if there are obstacles, grab the package, and then move it to the target location</demo><intent>(check if there are obstacles), (grab the package), and then (move it to the target location)</intent><pattern>^(check.*obstacles.*), (grab.*), and then (move.*location)$</pattern></rule><rule><demo>check the package's safety and type, and then execute route_plan</demo><intent>(check the package's safety) and (type), and then (execute route_plan)</intent><pattern>^(check.*package's.*safety.*) and (type.*), and then (execute.*route_plan)$</pattern></rule><rule><demo>send a notification to report an exception and interrupt the operation</demo><intent>(send a notification) to (report an exception) and (interrupt the operation)</intent><pattern>^(send.*notification) to (report.*exception) and (interrupt.*operation)$</pattern></rule><rule><demo>check the safety of the environment, then grab the package and assemble the parts</demo><intent>(check the safety of the environment), then (grab the package) and (assemble the parts)</intent><pattern>^(check.*), then (grab.*)and (assemble.*)$</pattern></rule><rule><demo>grab the package, and then assemble the package after confirming the package type</demo><intent>(grab the package), and then (assemble the package) (after confirming the package type)</intent><pattern>^(grab.*) and then (assemble.*) (after confirming.*)$</pattern></rule><rule><demo>move the package, check if the environment is safe, and then place the package</demo><intent>(move the package), (check if the environment is safe), and then (place the package)</intent><pattern>^(move.*) (check.*environment.*safe), and then (place.*)$</pattern></rule><rule><demo>first check for envs_safety and package_type, then perform package grab and route plan</demo><intent>(first check for envs_safety) and (package_type), then (perform package grab) and (route plan)</intent><pattern>^(first check.*envs_safety) and (package_type.*), then (perform.*package grab.*) and (route.*plan.*)$</pattern></rule><rule><demo>grab the component safely, and then use route planning to move it to the designated location</demo><intent>(grab the component safely), and then (use route planning) to (move it to the designated location)</intent><pattern>^(grab.*safely), and then (use.*route planning) to (move.*designated location)$</pattern></rule><rule><demo>transport the package to the designated location safely and smoothly</demo><intent>(transport the package) to the (designated location) (safely and smoothly)</intent><pattern>^(transport.*to.*designated.*safely.*smoothly)$</pattern></rule><rule><demo>grab the parts from the storage area, move them to the assembly area, and then assemble the parts</demo><intent>(grab the parts) from the storage area, (move them) to the assembly area, and then (assemble the parts)</intent><pattern>^(grab.*) from the storage area, (move.*) to the assembly area, and then (assemble.*)$</pattern></rule><rule><demo>check the package type and detect any obstacles before moving the package to its destination</demo><intent>(check the package type) and (detect any obstacles) before (moving the package to its destination)</intent><pattern>^(check.*package.*) and (detect.*obstacles.*) before (moving.*package.*destination)$</pattern></rule><rule><demo>check the available space and ensure safety before moving the package</demo><intent>(check the available space) and (ensure safety) before (moving the package)</intent><pattern>^(check.*space) and (ensure.*) before (moving.*package)$</pattern></rule><rule><demo>after grabbing the package, if there is an obstacle, wait or ask for help</demo><intent>(after grabbing the package), (if there is an obstacle), (wait or ask for help)</intent><pattern>^(after grabbing.*), (if.*), (wait.*|ask.*help)$</pattern></rule><rule><demo>if not, notify an exception</demo><intent>(if not), (notify an exception)</intent><pattern>^(if not), (notify.*)$</pattern></rule><rule><demo>grab the package safely, then move and place it correctly</demo><intent>(grab the package safely), then (move and place it correctly)</intent><pattern>^(grab.*safely), then (move.*place.*correctly)$</pattern></rule><rule><demo>check the environment safety, then execute the route plan to the target location</demo><intent>(check the environment safety), then (execute the route plan) to the target location</intent><pattern>^(check.*), then (execute.*route.*plan) to the target location$</pattern></rule><rule><demo>position the package correctly and then execute route planning to reach the destination</demo><intent>(position the package correctly) and then (execute route planning) to reach the destination</intent><pattern>^(position.*package.*correctly) and then (execute.*route.*planning) to reach the destination$</pattern></rule><rule><demo>grab the package and interrupt the operation if necessary</demo><intent>(grab the package) and (interrupt the operation) (if necessary)</intent><pattern>^(grab.*) and (interrupt.*)(if.*)$</pattern></rule><rule><demo>check package location and move package to target position</demo><intent>(check package location) and (move package to target position)</intent><pattern>^(check.*location) and (move.*package.*target.*position)$</pattern></rule><rule><demo>check the environment safety and then send a notification of the exception</demo><intent>(check the environment safety) and then (send a notification of the exception)</intent><pattern>^(check.*environment.*safety) and then (send.*notification.*exception)$</pattern></rule><rule><demo>check the location of the package, and then place it in the correct position</demo><intent>(check the location of the package), and then (place it in the correct position)</intent><pattern>^(check.*), and then (place.*correct.*position)$</pattern></rule><rule><demo>check that the package is positioned correctly, and then assemble the parts</demo><intent>(check that the package is positioned correctly), and then (assemble the parts)</intent><pattern>^(check.*package.*positioned.*), and then (assemble.*)$</pattern></rule><rule><demo>collect the box, open it, extract the goods, and inspect the product quality</demo><intent>(collect the box), (open it), (extract the goods), and (inspect the product quality)</intent><pattern>^(collect.*) (open.*) (extract.*) and (inspect.*product.*quality)$</pattern></rule><rule><demo>check object location, determine availability, and notify exceptions</demo><intent>(check object location), (determine availability), and (notify exceptions)</intent><pattern>^(check.*), (determine.*), and (notify.*)$</pattern></rule><rule><demo>inspect the package, then confirm the target location, and finally move the package</demo><intent>(inspect the package), then (confirm the target location), and finally (move the package)</intent><pattern>^(inspect.*), then (confirm.*), and finally (move.*)$</pattern></rule><rule><demo>retrieve the correct tools, correct positioning, and then assemble the parts</demo><intent>(retrieve the correct tools), (correct positioning), and then (assemble the parts)</intent><pattern>^(retrieve.*tools), (correct.*positioning), and then (assemble.*parts)$</pattern></rule><rule><demo>carry out the necessary route planning and sound an alarm when an emergency occurs</demo><intent>(carry out the necessary route planning) and (sound an alarm) (when an emergency occurs)</intent><pattern>^(carry.*route.*planning) and (sound.*alarm) (when.*emergency.*occurs)$</pattern></rule><rule><demo>check whether the target location is safe, and then move the package to the correct position</demo><intent>(check whether the target location is safe), and then (move the package) to (the correct position)</intent><pattern>^(check.*target.*safe), and then (move.*package) to (the correct.*position)$</pattern></rule><rule><demo>check that the package has been correctly positioned before grabbing it</demo><intent>(check that the package has been correctly positioned) before (grabbing it)</intent><pattern>^(check.*package.*correctly.*positioned) before (grab.*)$</pattern></rule><rule><demo>correctly position the package to ensure safety and stability</demo><intent>(correctly position the package) to ensure (safety and stability)</intent><pattern>^(correctly position.*) to ensure (safety.*stability)$</pattern></rule><rule><demo>grab the necessary parts and assemble them in order to complete the package assembly</demo><intent>(grab the necessary parts) and (assemble them) in order to (complete the package assembly)</intent><pattern>^(grab.*) and (assemble.*)(in order to.*)$</pattern></rule><rule><demo>move the package to the designated position while ensuring the environment safety</demo><intent>(move the package) to (the designated position) (while ensuring the environment safety)</intent><pattern>^(move.*to.*) (while ensuring.*)$</pattern></rule><rule><demo>detect the package type, and then perform corresponding subsequent operations</demo><intent>(detect the package type), and then (perform corresponding subsequent operations)</intent><pattern>^(detect.*) and then (perform.*subsequent.*operations)$</pattern></rule><rule><demo>check the package status, plan the optimal route, and execute</demo><intent>(check the package status), (plan the optimal route), and (execute)</intent><pattern>^(check.*), (plan.*), and (execute.*)$</pattern></rule><rule><demo>confirm that the environment is safe, and then move the package to the designated location</demo><intent>(confirm that the environment is safe), and then (move the package) to the (designated location)</intent><pattern>^(confirm.*environment.*safe), and then (move.*package) to the (designated.*location)$</pattern></rule><rule><demo>scan the package and identify its type, and then move the package to the target location</demo><intent>(scan the package) and (identify its type), and then (move the package to the target location)</intent><pattern>^(scan.*) and (identify.*) and then (move.*package.*target.*location)$</pattern></rule><rule><demo>move package to target location and request assistance if necessary</demo><intent>(move package to target location) and (request assistance) (if necessary)</intent><pattern>^(move.*package.*to.*target.*location) and (request.*assistance)(.*if.*necessary)$</pattern></rule><rule><demo>grab the package and execute the route planning</demo><intent>(grab the package) and (execute the route planning)</intent><pattern>^(grab.*) and (execute.*route.*planning)$</pattern></rule><rule><demo>choose a package, grab it, and place it at the target location</demo><intent>(choose a package), (grab it), and (place it at the target location)</intent><pattern>^(choose.*), (grab.*), and (place.*)$</pattern></rule><rule><demo>check the environment safety, then choose a route and move to the target location</demo><intent>(check the environment safety), then (choose a route) and (move to the target location)</intent><pattern>^(check.*), then (choose.*route) and (move.*target.*location)$</pattern></rule><rule><demo>take the package to the target location and then assemble the parts</demo><intent>(take the package) to (the target location) and then (assemble the parts)</intent><pattern>^(take.*) to (the target.*) and then (assemble.*)$</pattern></rule><rule><demo>get the package and interrupt the operation if the environment is unsafe</demo><intent>(get the package) and (interrupt the operation) (if the environment is unsafe)</intent><pattern>^(get.*) and (interrupt.*) (if.*)$</pattern></rule><rule><demo>grab the necessary parts, check whether the environment is safe, and then assemble these parts</demo><intent>(grab the necessary parts), (check whether the environment is safe), and then (assemble these parts)</intent><pattern>^(grab.*) (check.*environment.*safe), and then (assemble.*parts)$</pattern></rule><rule><demo>assemble the items in the correct order and place them in the target location</demo><intent>(assemble the items) (in the correct order) and (place them) (in the target location)</intent><pattern>^(assemble.*items.*) (in.*order) and (place.*) (in.*target.*location)$</pattern></rule><rule><demo>check the environment safety, confirm the package type, and move the package to the target location.
</demo><intent>(check the environment safety), (confirm the package type), and (move the package to the target location)</intent><pattern>^(check.*), (confirm.*), and (move.*)$</pattern></rule><rule><demo>detect the type of package, and then request help to move the package to the correct location</demo><intent>(detect the type of package), and then (request help) to (move the package) to the (correct location)</intent><pattern>^(detect.*package.*), and then (request.*help) to (move.*package) to the (correct.*location)$</pattern></rule><rule><demo>check the package status, confirm the environment safety, and then assemble the parts</demo><intent>(check the package status), (confirm the environment safety), and then (assemble the parts)</intent><pattern>^(check.*package.*status), (confirm.*environment.*safety), and then (assemble.*parts)$</pattern></rule><rule><demo>check package status, grab the package, and deliver it to the correct location at the same time</demo><intent>(check package status), (grab the package), and (deliver it to the correct location) (at the same time)</intent><pattern>^(check.*), (grab.*), and (deliver.*)(at the same time)$</pattern></rule><rule><demo>check the surrounding environment and package type, then proceed to the next operation</demo><intent>(check the surrounding environment) and (package type), then (proceed to the next operation)</intent><pattern>^(check.*surrounding.*) and (package.*), then (proceed.*next.*operation)$</pattern></rule><rule><demo>check the package type and then grab it</demo><intent>(check the package type) and then (grab it)</intent><pattern>^(check.*package.*) and then (grab.*)$</pattern></rule><rule><demo>move the package to the target location as quickly as possible when there is no obstacle or danger</demo><intent>(move the package) to (the target location) (as quickly as possible) (when there is no obstacle or danger)</intent><pattern>^(move.*to.*) (as quickly.*possible) (when.*no obstacle.*danger)$</pattern></rule><rule><demo>grab the package and place it at the target location without any damage</demo><intent>(grab the package) and (place it at the target location) without any damage</intent><pattern>^(grab.*) and (place.*at.*) without any damage$</pattern></rule><rule><demo>move the package to the designated location accurately</demo><intent>(move the package) to (the designated location) (accurately)</intent><pattern>^(move.*to.*) (the designated.*) (accurately)$</pattern></rule><rule><demo>move the package to the target location, avoiding obstacles</demo><intent>(move the package to the target location), (avoiding obstacles)</intent><pattern>^(move.*package.*to.*target.*location), (avoiding.*obstacles)$</pattern></rule><rule><demo>check if the environment is safe, and then grab the package</demo><intent>(check if the environment is safe), and then (grab the package)</intent><pattern>^(check.*environment.*safe), and then (grab.*)$</pattern></rule><rule><demo>check if the package is the correct type, and then place it at the target location</demo><intent>(check if the package is the correct type), and then (place it at the target location)</intent><pattern>^(check.*package.*correct.*), and then (place.*at.*target.*location)$</pattern></rule><rule><demo>check the package type, and then assemble the package</demo><intent>(check the package type), and then (assemble the package)</intent><pattern>^(check.*package.*), and then (assemble.*package)$</pattern></rule><rule><demo>plan the best route to the target location and check the environment safety simultaneously</demo><intent>(plan the best route to the target location) and (check the environment safety) (simultaneously)</intent><pattern>^(plan.*route.*) and (check.*environment.*safety)(.*simultaneously)$</pattern></rule><rule><demo>pick up the appropriate package from the shelf, and place it carefully on the conveyor belt</demo><intent>(pick up the appropriate package) from the shelf, and (place it carefully) on the conveyor belt</intent><pattern>^(pick.*package.*) from the shelf, and (place.*carefully.*) on the conveyor belt$</pattern></rule><rule><demo>check the package type, and then route to the correct destination</demo><intent>(check the package type), and then (route to the correct destination)</intent><pattern>^(check.*package.*), and then (route.*correct.*destination)$</pattern></rule><rule><demo>move the package to the default location, and then check the environment for safety</demo><intent>(move the package to the default location), and then (check the environment for safety)</intent><pattern>^(move.*package.*default.*) and then (check.*environment.*safety)$</pattern></rule><rule><demo>check the type of the package and then move it to the designated location</demo><intent>(check the type of the package) and then (move it to the designated location)</intent><pattern>^(check.*type.*) and then (move.*designated.*location)$</pattern></rule><rule><demo>interrupt the operation immediately if there is an obstacle, and then notify the exception</demo><intent>(interrupt the operation immediately) if (there is an obstacle), and then (notify the exception)</intent><pattern>^(interrupt.*immediately) if (there.*obstacle), and then (notify.*exception)$</pattern></rule><rule><demo>assemble the components safely and correctly</demo><intent>(assemble the components) (safely and correctly)</intent><pattern>^(assemble.*)(safely and correctly)$</pattern></rule><rule><demo>move the package from the original location to the target location within a given time limit</demo><intent>(move the package) (from the original location) (to the target location) (within a given time limit)</intent><pattern>^(move.*)(from.*)(to.*)(within.*time.*limit)$</pattern></rule><rule><demo>retrieve parts from the designated storage location with the help of the arm or fixture</demo><intent>(retrieve parts) from the designated storage location (with the help of the arm or fixture)</intent><pattern>^(retrieve.*) from the designated storage location (with the help.*|fixture)$</pattern></rule><rule><demo>check the type of the package and determine the next step based on the type of the package</demo><intent>(check the type of the package) and (determine the next step) based on (the type of the package)</intent><pattern>^(check.*package.*) and (determine.*step.*) based on (the type.*package)$</pattern></rule><rule><demo>move the package to the target location and check whether there are obstacles along the way</demo><intent>(move the package to the target location) and (check whether there are obstacles along the way)</intent><pattern>^(move.*package.*target.*location) and (check.*obstacles.*way)$</pattern></rule><rule><demo>sort the packages by type, and then put them into different boxes</demo><intent>(sort the packages by type), and then (put them into different boxes)</intent><pattern>^(sort.*packages.*type), and then (put.*into.*different.*boxes)$</pattern></rule><rule><demo>take the package to the correct location, and then use the mechanical arm or fixture to grab it</demo><intent>(take the package to the correct location), and then (use the mechanical arm or fixture) to (grab it)</intent><pattern>^(take.*to.*location), and then (use.*mechanical.*fixture) to (grab.*)$</pattern></rule><rule><demo>check the environment safety, pick up the package, and then place it in the correct position</demo><intent>(check the environment safety), (pick up the package), and then (place it in the correct position)</intent><pattern>^(check.*), (pick.*), and then (place.*correct.*)$</pattern></rule><rule><demo>perform a safe route plan to reach the target location and move the package there</demo><intent>(perform a safe route plan) to (reach the target location) and (move the package there)</intent><pattern>^(perform.*route.*plan) to (reach.*target.*location) and (move.*package.*there)$</pattern></rule><rule><demo>after checking the target location, notify exception to the administrator</demo><intent>(after checking the target location), (notify exception) to the administrator</intent><pattern>^(after checking.*), (notify.*exception.*) to the administrator$</pattern></rule><rule><demo>check the position of the package, and then grab it if it is in the correct position</demo><intent>(check the position of the package), and then (grab it) (if it is in the correct position)</intent><pattern>^(check.*position.*) and then (grab.*) (if.*correct.*position)$</pattern></rule></root>